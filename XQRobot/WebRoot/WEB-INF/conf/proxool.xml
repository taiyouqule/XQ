<?xml version="1.0" encoding="UTF-8"?>
<!-- the proxool configuration can be embedded within your own application's. 
	Anything outside the "proxool" tag is ignored. -->
<something-else-entirely>
	<proxool>
		<alias>mysql</alias>
		<driver-url>
			jdbc:mysql://127.0.0.1:3306/db_robot?characterEncoding=UTF-8
		</driver-url>
		<driver-class>com.mysql.jdbc.Driver</driver-class>
		<driver-properties>
			<property name="user" value="root" />
			<property name="password" value="zhou" />
		</driver-properties>
		<!--最大连接数(默认5个),超过了这个连接数,再有请求时,就排在队列中等候,最大的等待请求数由maximum-new-connections决定 -->
		<maximum-connection-count>100</maximum-connection-count>
		<!--最小连接数(默认2个,包含活动的和空闲的) -->
		<minimum-connection-count>4</minimum-connection-count>
		<!--proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒 -->
		<house-keeping-sleep-time>30000</house-keeping-sleep-time>
		<!--没有空闲连接可以分配而在队列中等候的最大请求数,超过这个请求数的用户连接就不会被接受 -->
		<!-- maximum-new-connections不被推荐使用了，所以用simultaneous-build-throttle来代替了 -->
		<simultaneous-build-throttle>15</simultaneous-build-throttle>
		<!--maximum-new-connections>10</maximum-new-connections -->
		<!--最少保持的空闲连接数(默认2个) -->
		<prototype-count>2</prototype-count>
		<!-- maximum-active-time缺省5minutes 172800000毫秒=48小时 -->
		<maximum-active-time>172800000</maximum-active-time>
		<!-- maximum-connection-lifetime缺省4hours 180000000毫秒=50小时 -->
		<maximum-connection-lifetime>180000000</maximum-connection-lifetime>
		<!--在使用之前测试 -->
		<test-before-use>false</test-before-use>
		<!--用于保持连接的测试语句 -->
		<!-- house-keeping-test-sql> select sysdate from dual </house-keeping-test-sql -->
		<!-- 是否监控sql信息 -->
		<trace>true</trace>
		<!-- statistics>10s,1m</statistics -->
		<!-- statistics-log-level>DEBUG</statistics-log-level -->

	</proxool>
</something-else-entirely>

